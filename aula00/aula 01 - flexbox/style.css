@charset "UTF-8";

* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
}

.main-content {
   width: 95vw;
   height: 100vh;
   display: flex;
   gap: 0 15px;   /* tipo um margin. Tem tb só gap: 0px 10px; ou col-gap  */
   justify-content: center;
   align-items: center;  /* vai centralizar na direção oposta do justify-content:center. pode-se usar o align-itens: stretch para esticar o elemento por toda a tela */
   flex-wrap: wrap;
}

.box-content {
   padding: 20px;
   border: 2px solid black;
   height: 200px;
   display: flex;
   justify-content: center;
   align-items: center;
   flex-basis: 200px;  /* mesma função do min-width */
   flex-grow: 1; /* os itens esticam para preencher a tela. Usando junto com o flex-wrap ele reduz o tamanho do elemento antes de quebrar. Se usar o flex-grow apenas em 1 item, ele vai ficar maior que os demais */
}

.item1 {
   flex-shrink: 2;  /* Ele diminui mais rápido que os demais itens, quando a tela reduzir para evitar quebra de tela. Nesse caso, pode ser que não compense usá-lo com o flex-wrap */
   /* dá pra usar também o "flex: x y z(px)", onde xyz é o flex-grow flex-shrink e flex-basis */
}



.item2 {

}

.item3 {

}